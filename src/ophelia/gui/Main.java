/* 
Ophelia, the cat! is a lightweight mediaplayer written in Java. The main goal 
is(and was) to create a very light and fast mediaplayer 
with the most wanted features.

Copyright (C) 2008 Tobias W. Kjeldsen; tobias@wkjeldsen.dk

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>. 
 */
package ophelia.gui;

import java.awt.event.KeyEvent;
import java.util.Locale;
import java.util.Observable;
import java.util.Observer;
import java.util.ResourceBundle;
import java.util.Vector;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import net.roarsoftware.lastfm.scrobble.Scrobbler;
import ophelia.main.MediaPlayerController;
import ophelia.main.Playlist;
import ophelia.main.PlaylistController;
import ophelia.main.ScrobbleStatus;
import ophelia.main.Settings;
import ophelia.main.TrackWithID3;

/**
 *
 * @author  Tobias W. Kjeldsen
 */
public class Main extends javax.swing.JFrame implements Observer {

    MediaPlayerController mpController;
    PlaylistController plController;
    ExecutorService progressAnimationThread;
    GUIAnimation progressbarAnimation;
    ResourceBundle bundle = ResourceBundle.getBundle("ophelia.gui.localization.MainResources"); 

    /** Creates new form MainWindow */
    public Main() {
        mpController = new MediaPlayerController();
        plController = new PlaylistController();
        progressAnimationThread = Executors.newFixedThreadPool(1);
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        initComponents();
        this.setIconImage(this.getToolkit().getImage(getClass().getResource("ophelia-mascot.png")));
        jFrame_about.setIconImage(this.getToolkit().getImage(getClass().getResource("ophelia-mascot.png")));
        jFrame_settings.setIconImage(this.getToolkit().getImage(getClass().getResource("ophelia-mascot.png")));
        jDialog_musicchoose.setIconImage(this.getToolkit().getImage(getClass().getResource("ophelia-mascot.png")));
        jDialog_playlistchoose.setIconImage((this.getToolkit().getImage(getClass().getResource("ophelia-mascot.png"))));
        jDialog_musicchoose.setSize(520, 300);
        jDialog_playlistchoose.setSize(520, 300);
        jFrame_about.setSize(400, 310);
        jFrame_settings.setSize(360, 260);
        /* observer-pattern; we setup what we want to observe */
        plController.getPlaylist().addObserver(this);
        ScrobbleStatus.getInstance().addObserver(this);
        /* intial load animation of playlist on startup */
        new Thread(new GUIAnimation(1)).start();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog_musicchoose = new javax.swing.JDialog();
        jFileChooser_musicfile = new javax.swing.JFileChooser();
        jFrame_about = new javax.swing.JFrame();
        jPanel2 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel_version = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel_linkHomepageOphelia = new javax.swing.JLabel();
        jFrame_settings = new javax.swing.JFrame();
        jPanel3 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jTextField_playlistName = new javax.swing.JTextField();
        jCheckBox_loadPlaylistStartup = new javax.swing.JCheckBox();
        jButton2 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jTextField_windowTitle = new javax.swing.JTextField();
        jCheckBox_trackInWindow = new javax.swing.JCheckBox();
        jCheckBox_trayIcon = new javax.swing.JCheckBox();
        jCheckBox_trayClose = new javax.swing.JCheckBox();
        jCheckBox_trayMinimize = new javax.swing.JCheckBox();
        jButton3 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextField_lastfmUsername = new javax.swing.JTextField();
        jPasswordField_lastfmPassword = new javax.swing.JPasswordField();
        jLabel9 = new javax.swing.JLabel();
        jButton_checkAuthentication = new javax.swing.JButton();
        jCheckBox_lastfmScrobble = new javax.swing.JCheckBox();
        jDialog_playlistchoose = new javax.swing.JDialog();
        jFileChooser_playlistfile = new javax.swing.JFileChooser();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton_addDirectory = new javax.swing.JButton();
        jButton_addFiles = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        jLabel3 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList_playlist1 = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList_playlist2 = new javax.swing.JList();
        jButton_play = new javax.swing.JButton();
        jButton_stop = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jToolBar_statusbar = new javax.swing.JToolBar();
        jLabel_playlistcount = new javax.swing.JLabel();
        jLabel_lastfmLastScrobble = new javax.swing.JLabel();
        jTextField_search = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu_addFiles = new javax.swing.JMenu();
        jMenuItem_addFiles = new javax.swing.JMenuItem();
        jMenuItem_addDirectory = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JSeparator();
        jMenuItem_openDefaultPlaylist = new javax.swing.JMenuItem();
        jMenuItem_openPlaylist = new javax.swing.JMenuItem();
        jMenuItem_savePlaylist = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JSeparator();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem_clearplaylist = new javax.swing.JMenuItem();
        jMenuItem_removetrack = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JSeparator();
        jCheckBoxMenuItem2 = new javax.swing.JCheckBoxMenuItem();
        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem2 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem3 = new javax.swing.JRadioButtonMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem_play = new javax.swing.JMenuItem();
        jMenuItem_pause = new javax.swing.JMenuItem();
        jMenuItem_stop = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JSeparator();
        jRadioButtonMenuItem4 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem5 = new javax.swing.JRadioButtonMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JSeparator();
        jCheckBoxMenuItem_lastfmScrobble = new javax.swing.JCheckBoxMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem_checkVersion = new javax.swing.JMenuItem();

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("ophelia/gui/localization/MainResources"); // NOI18N
        jDialog_musicchoose.setTitle(bundle.getString("CHOOSE_MUSIC_TITLE")); // NOI18N

        jFileChooser_musicfile.setFileFilter(new MediaFilter());
        jFileChooser_musicfile.setFileSelectionMode(javax.swing.JFileChooser.FILES_AND_DIRECTORIES);
        jFileChooser_musicfile.setMultiSelectionEnabled(true);
        jFileChooser_musicfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooser_musicfileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialog_musicchooseLayout = new javax.swing.GroupLayout(jDialog_musicchoose.getContentPane());
        jDialog_musicchoose.getContentPane().setLayout(jDialog_musicchooseLayout);
        jDialog_musicchooseLayout.setHorizontalGroup(
            jDialog_musicchooseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFileChooser_musicfile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDialog_musicchooseLayout.setVerticalGroup(
            jDialog_musicchooseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFileChooser_musicfile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jDialog_musicchoose.getAccessibleContext().setAccessibleParent(null);

        jFrame_about.setTitle("Holy smokes... that's a cat!");

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ophelia/gui/ophelia-mascot.png"))); // NOI18N
        jLabel4.setText("Ophelia, the cat!");

        jLabel5.setText(bundle.getString("HTML_DESCRIPTION")); // NOI18N
        jLabel5.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel6.setText(bundle.getString("AUTHOR")); // NOI18N

        jLabel_version.setText(java.util.ResourceBundle.getBundle("ophelia/gui/localization/MainResources").getString("VERSION_") + Settings.getInstance().getOpheliaVersion());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"somerandomdude.net", "lovely Bitcons icons", "www.somerandomdude.net"},
                {"Jens Vonderheide", "parsing ID3-tags on the go!", "www.vdheide.de"},
                {"JavaZoom", "providing nice MP3-decoding!", "www.javazoom.net"},
                {"David R. Robison", "providing fantastic FLAC-decoding", "www.jflac.sourceforge.net"},
                {"Janni Kovacs", "last.fm API bindings for Java", "www.somerandomdude.net/srd-projects/bitcons"},
                {"Troy Dunham", "ophelia-mascot icon", "www.troyboydesign.com"}
            },
            new String [] {
                "Author:", "", "Homepage:"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setShowHorizontalLines(false);
        jTable1.setShowVerticalLines(false);
        jScrollPane3.setViewportView(jTable1);

        jLabel13.setFont(jLabel13.getFont().deriveFont(jLabel13.getFont().getStyle() | java.awt.Font.BOLD));
        jLabel13.setText(bundle.getString("THANKS_AND_CREDIT_GOES_TO")); // NOI18N

        jLabel14.setText(bundle.getString("FOR_MORE_INFORMATION")); // NOI18N

        jLabel_linkHomepageOphelia.setText("<html><a href=http://wkjeldsen.dk/ophelia>www.wkjeldsen.dk/ophelia/</a></html>");
        jLabel_linkHomepageOphelia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_linkHomepageOpheliaMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                        .addComponent(jLabel_version)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel_linkHomepageOphelia))
                    .addComponent(jLabel13))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(jLabel_version)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel_linkHomepageOphelia))
                .addGap(18, 18, 18)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jFrame_aboutLayout = new javax.swing.GroupLayout(jFrame_about.getContentPane());
        jFrame_about.getContentPane().setLayout(jFrame_aboutLayout);
        jFrame_aboutLayout.setHorizontalGroup(
            jFrame_aboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jFrame_aboutLayout.setVerticalGroup(
            jFrame_aboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jFrame_settings.setTitle(bundle.getString("SETTINGS")); // NOI18N

        jTabbedPane2.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        jLabel10.setText("Default playlist filename:");

        jTextField_playlistName.setText(Settings.getInstance().getDefaultPlaylistName());
        jTextField_playlistName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField_playlistNameFocusLost(evt);
            }
        });

        jCheckBox_loadPlaylistStartup.setSelected(Settings.getInstance().isLoadPlaylistStartup());
        jCheckBox_loadPlaylistStartup.setText("<html>Initialize default playlist on startup (affects startup speed)</html>");
        jCheckBox_loadPlaylistStartup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_loadPlaylistStartupActionPerformed(evt);
            }
        });

        jButton2.setText(bundle.getString("RESTORE_DEFAULTS")); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jCheckBox_loadPlaylistStartup, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(4, 4, 4)
                        .addComponent(jTextField_playlistName, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE))
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jTextField_playlistName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox_loadPlaylistStartup)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 108, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addContainerGap())
        );

        jTabbedPane2.addTab("General", jPanel5);

        jLabel12.setText("Default window title:");

        jTextField_windowTitle.setText(Settings.getInstance().getWindowTitleText());
        jTextField_windowTitle.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField_windowTitleFocusLost(evt);
            }
        });

        jCheckBox_trackInWindow.setSelected(Settings.getInstance().isTrackInWindowTitle());
        jCheckBox_trackInWindow.setText(bundle.getString("SHOW_TRACK_IN_WINDOW")); // NOI18N
        jCheckBox_trackInWindow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_trackInWindowActionPerformed(evt);
            }
        });

        jCheckBox_trayIcon.setSelected(Settings.getInstance().isTrayIcon());
        jCheckBox_trayIcon.setText(bundle.getString("DISPLAY_TRAY_ICON")); // NOI18N
        jCheckBox_trayIcon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_trayIconActionPerformed(evt);
            }
        });

        jCheckBox_trayClose.setSelected(Settings.getInstance().isTrayClose());
        jCheckBox_trayClose.setText(bundle.getString("CLOSE_TO_TRAY")); // NOI18N
        jCheckBox_trayClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_trayCloseActionPerformed(evt);
            }
        });

        jCheckBox_trayMinimize.setSelected(Settings.getInstance().isTrayMinimize());
        jCheckBox_trayMinimize.setText(bundle.getString("MINIMIZE_TO_TRAY")); // NOI18N
        jCheckBox_trayMinimize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_trayMinimizeActionPerformed(evt);
            }
        });

        jButton3.setText(bundle.getString("RESTORE_DEFAULTS")); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox_trayIcon)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox_trayMinimize)
                            .addComponent(jCheckBox_trayClose)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jCheckBox_trackInWindow))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField_windowTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE))
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jTextField_windowTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox_trackInWindow)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox_trayIcon)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox_trayClose)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox_trayMinimize)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Looks", jPanel6);

        jLabel7.setFont(jLabel7.getFont());
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ophelia/gui/last.fm-big.png"))); // NOI18N
        jLabel7.setText("<html>Last.fm: <a href=http://www.last.fm>www.last.fm</a><br>Audioscrobble and statistics support</html>");

        jLabel8.setText("Username:");

        jTextField_lastfmUsername.setText(Settings.getInstance().getLasfmUsername());
        jTextField_lastfmUsername.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField_lastfmUsernameFocusLost(evt);
            }
        });

        jPasswordField_lastfmPassword.setText(Settings.getInstance().getLasfmPassword());
        jPasswordField_lastfmPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jPasswordField_lastfmPasswordFocusLost(evt);
            }
        });

        jLabel9.setText("Password:");

        jButton_checkAuthentication.setText(bundle.getString("CHECK_AUTH")); // NOI18N
        jButton_checkAuthentication.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_checkAuthenticationActionPerformed(evt);
            }
        });

        jCheckBox_lastfmScrobble.setSelected(Settings.getInstance().isLastfmScrobble());
        jCheckBox_lastfmScrobble.setText(bundle.getString("SCROBBLE_MY_SONGS")); // NOI18N
        jCheckBox_lastfmScrobble.setToolTipText("Enabled and your songs will be entering \"Recently Listened Tracks\" on last.fm");
        jCheckBox_lastfmScrobble.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_lastfmScrobbleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton_checkAuthentication, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jPasswordField_lastfmPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                                    .addComponent(jTextField_lastfmUsername, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jCheckBox_lastfmScrobble))
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addGap(5, 5, 5)
                .addComponent(jCheckBox_lastfmScrobble)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jTextField_lastfmUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jPasswordField_lastfmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton_checkAuthentication)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Last.fm", jPanel4);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame_settingsLayout = new javax.swing.GroupLayout(jFrame_settings.getContentPane());
        jFrame_settings.getContentPane().setLayout(jFrame_settingsLayout);
        jFrame_settingsLayout.setHorizontalGroup(
            jFrame_settingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jFrame_settingsLayout.setVerticalGroup(
            jFrame_settingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jDialog_playlistchoose.setTitle(bundle.getString("PLAYLIST_MANAGEMENT")); // NOI18N

        jFileChooser_playlistfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooser_playlistfileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialog_playlistchooseLayout = new javax.swing.GroupLayout(jDialog_playlistchoose.getContentPane());
        jDialog_playlistchoose.getContentPane().setLayout(jDialog_playlistchooseLayout);
        jDialog_playlistchooseLayout.setHorizontalGroup(
            jDialog_playlistchooseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFileChooser_playlistfile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDialog_playlistchooseLayout.setVerticalGroup(
            jDialog_playlistchooseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFileChooser_playlistfile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jDialog_playlistchoose.getAccessibleContext().setAccessibleParent(null);

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle(Settings.getInstance().getWindowTitleText());

        jLabel1.setText("...");

        jButton_addDirectory.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ophelia/gui/open.gif"))); // NOI18N
        jButton_addDirectory.setText(bundle.getString("DIRS__")); // NOI18N
        jButton_addDirectory.setBorder(null);
        jButton_addDirectory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_addDirectoryActionPerformed(evt);
            }
        });

        jButton_addFiles.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ophelia/gui/add.gif"))); // NOI18N
        jButton_addFiles.setText(bundle.getString("FILES__")); // NOI18N
        jButton_addFiles.setBorder(null);
        jButton_addFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_addFilesActionPerformed(evt);
            }
        });

        jLabel2.setText("Add...");

        jProgressBar1.setForeground(new java.awt.Color(204, 0, 0));
        jProgressBar1.setString("");
        jProgressBar1.setStringPainted(true);

        jLabel3.setText("...");

        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);

        jScrollPane1.setBorder(null);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jList_playlist1.setBackground(java.awt.SystemColor.control);
        jList_playlist1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Click search field to view loaded playlist..." };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jList_playlist1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList_playlist1.setSelectionBackground(new java.awt.Color(153, 0, 0));
        jList_playlist1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList_playlist1MouseClicked(evt);
            }
        });
        jList_playlist1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jList_playlist1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jList_playlist1);

        jTabbedPane1.addTab("Playlist 1", jScrollPane1);

        jScrollPane2.setBorder(null);
        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jList_playlist2.setBackground(java.awt.SystemColor.control);
        jList_playlist2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList_playlist2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jList_playlist2);

        jTabbedPane1.addTab("Playlist 2", jScrollPane2);

        jButton_play.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ophelia/gui/play.gif"))); // NOI18N
        jButton_play.setText(bundle.getString("PLAY")); // NOI18N
        jButton_play.setBorder(null);
        jButton_play.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_playActionPerformed(evt);
            }
        });

        jButton_stop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ophelia/gui/stop.gif"))); // NOI18N
        jButton_stop.setBorder(null);
        jButton_stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_stopActionPerformed(evt);
            }
        });

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ophelia/gui/pause.gif"))); // NOI18N
        jButton8.setBorder(null);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jToolBar_statusbar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jToolBar_statusbar.setFloatable(false);
        jToolBar_statusbar.setRollover(true);
        jToolBar_statusbar.add(jLabel_playlistcount);

        jLabel_lastfmLastScrobble.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ophelia/gui/last.fm_scrooble.png"))); // NOI18N
        jLabel_lastfmLastScrobble.setText(ScrobbleStatus.getInstance().toString());
        jLabel_lastfmLastScrobble.setToolTipText("");
        jLabel_lastfmLastScrobble.setEnabled(Settings.getInstance().isLastfmScrobble());
        jToolBar_statusbar.add(jLabel_lastfmLastScrobble);

        jTextField_search.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField_searchCaretUpdate(evt);
            }
        });

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ophelia/gui/search.gif"))); // NOI18N
        jLabel11.setAlignmentX(0.5F);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_stop)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_play))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField_search, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_addFiles)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_addDirectory)))
                .addContainerGap())
            .addComponent(jToolBar_statusbar, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton_play, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton_stop, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jButton_addFiles, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_addDirectory, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToolBar_statusbar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jMenu_addFiles.setText(bundle.getString("FILE")); // NOI18N

        jMenuItem_addFiles.setText(bundle.getString("ADD_FILES")); // NOI18N
        jMenuItem_addFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_addFilesActionPerformed(evt);
            }
        });
        jMenu_addFiles.add(jMenuItem_addFiles);

        jMenuItem_addDirectory.setText(bundle.getString("ADD_DIRS")); // NOI18N
        jMenuItem_addDirectory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_addDirectoryActionPerformed(evt);
            }
        });
        jMenu_addFiles.add(jMenuItem_addDirectory);
        jMenu_addFiles.add(jSeparator3);

        jMenuItem_openDefaultPlaylist.setText(bundle.getString("OPEN_DEF_PLAYLIST")); // NOI18N
        jMenuItem_openDefaultPlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_openDefaultPlaylistActionPerformed(evt);
            }
        });
        jMenu_addFiles.add(jMenuItem_openDefaultPlaylist);

        jMenuItem_openPlaylist.setText(bundle.getString("OPEN_PLAYLIST")); // NOI18N
        jMenuItem_openPlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_openPlaylistActionPerformed(evt);
            }
        });
        jMenu_addFiles.add(jMenuItem_openPlaylist);

        jMenuItem_savePlaylist.setText(bundle.getString("SAVE_PLAYLIST")); // NOI18N
        jMenuItem_savePlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_savePlaylistActionPerformed(evt);
            }
        });
        jMenu_addFiles.add(jMenuItem_savePlaylist);
        jMenu_addFiles.add(jSeparator4);

        jMenuItem10.setText(bundle.getString("QUIT")); // NOI18N
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu_addFiles.add(jMenuItem10);

        jMenuBar1.add(jMenu_addFiles);

        jMenu4.setText(bundle.getString("EDIT")); // NOI18N

        jMenuItem_clearplaylist.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem_clearplaylist.setText(bundle.getString("CLEAR_PLAYLIST")); // NOI18N
        jMenuItem_clearplaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_clearplaylistActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem_clearplaylist);

        jMenuItem_removetrack.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, 0));
        jMenuItem_removetrack.setText(bundle.getString("REMOVE_SELECTED_TRACK")); // NOI18N
        jMenu4.add(jMenuItem_removetrack);
        jMenu4.add(jSeparator5);

        jCheckBoxMenuItem2.setSelected(true);
        jCheckBoxMenuItem2.setText(bundle.getString("NO_SORT")); // NOI18N
        jMenu4.add(jCheckBoxMenuItem2);

        jRadioButtonMenuItem1.setText(bundle.getString("SORT_BY_ARTIST")); // NOI18N
        jMenu4.add(jRadioButtonMenuItem1);

        jRadioButtonMenuItem2.setText(bundle.getString("SORT_BY_ALPH")); // NOI18N
        jMenu4.add(jRadioButtonMenuItem2);

        jRadioButtonMenuItem3.setText(bundle.getString("SORT_BY_TRACK_LENGTH")); // NOI18N
        jMenu4.add(jRadioButtonMenuItem3);

        jMenuBar1.add(jMenu4);

        jMenu5.setText(bundle.getString("PLAYBACK")); // NOI18N

        jMenuItem_play.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, 0));
        jMenuItem_play.setText(bundle.getString("PLAY")); // NOI18N
        jMenu5.add(jMenuItem_play);

        jMenuItem_pause.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_SPACE, 0));
        jMenuItem_pause.setText(bundle.getString("PAUSE")); // NOI18N
        jMenuItem_pause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_pauseActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem_pause);

        jMenuItem_stop.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, 0));
        jMenuItem_stop.setText(bundle.getString("STOP")); // NOI18N
        jMenuItem_stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_stopActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem_stop);
        jMenu5.add(jSeparator6);

        jRadioButtonMenuItem4.setSelected(true);
        jRadioButtonMenuItem4.setText(bundle.getString("CONTINUE_PLAY")); // NOI18N
        jRadioButtonMenuItem4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ophelia/gui/continues.gif"))); // NOI18N
        jMenu5.add(jRadioButtonMenuItem4);

        jRadioButtonMenuItem5.setText(bundle.getString("SHUFFLE_PLAY")); // NOI18N
        jRadioButtonMenuItem5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ophelia/gui/shuffle.gif"))); // NOI18N
        jMenu5.add(jRadioButtonMenuItem5);

        jMenuBar1.add(jMenu5);

        jMenu2.setText(bundle.getString("OPTIONS")); // NOI18N

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ophelia/gui/tools.gif"))); // NOI18N
        jMenuItem2.setText(bundle.getString("SETTINGS")); // NOI18N
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);
        jMenu2.add(jSeparator2);

        jCheckBoxMenuItem_lastfmScrobble.setSelected(Settings.getInstance().isLastfmScrobble());
        jCheckBoxMenuItem_lastfmScrobble.setText(bundle.getString("SCROBBLE_SONGS")); // NOI18N
        jCheckBoxMenuItem_lastfmScrobble.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem_lastfmScrobbleActionPerformed(evt);
            }
        });
        jMenu2.add(jCheckBoxMenuItem_lastfmScrobble);

        jMenuBar1.add(jMenu2);

        jMenu3.setText(bundle.getString("HELP")); // NOI18N

        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ophelia/gui/alert.gif"))); // NOI18N
        jMenuItem1.setText(bundle.getString("ABOUT")); // NOI18N
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem1);

        jMenuItem_checkVersion.setText(bundle.getString("CHECK_FOR_NEW_VERSION")); // NOI18N
        jMenuItem_checkVersion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_checkVersionActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem_checkVersion);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jButton_addFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_addFilesActionPerformed
    jFileChooser_musicfile.setFileSelectionMode(JFileChooser.FILES_ONLY);
    jDialog_musicchoose.setVisible(true);
}//GEN-LAST:event_jButton_addFilesActionPerformed

private void jFileChooser_musicfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooser_musicfileActionPerformed
    plController.addPlaylistTracks(jFileChooser_musicfile.getSelectedFiles());
    new Thread(new GUIAnimation(1)).start();
    jDialog_musicchoose.setVisible(false);
}//GEN-LAST:event_jFileChooser_musicfileActionPerformed

private void jList_playlist1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList_playlist1MouseClicked
    if (evt.getClickCount() == 2) {
        TrackWithID3 selectedTrack = (TrackWithID3) jList_playlist1.getSelectedValue();
        mpController.playTrack(selectedTrack.getAbsoluteFile().getAbsolutePath());
        //this thread will update the progressbar every 1 second
        if (progressbarAnimation != null) {
            progressbarAnimation.stop();
        }
        progressbarAnimation = new GUIAnimation(2);
        progressAnimationThread.submit(progressbarAnimation);
    }
}//GEN-LAST:event_jList_playlist1MouseClicked

private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
    mpController.pauseTrack();
}//GEN-LAST:event_jButton8ActionPerformed

private void jButton_stopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_stopActionPerformed
    mpController.stopTrack();
    jProgressBar1.setValue(0);
    jProgressBar1.setString("");
    setTitle(Settings.getInstance().getWindowTitleText());
    if (progressbarAnimation != null) {
        progressbarAnimation.stop();
    }
}//GEN-LAST:event_jButton_stopActionPerformed

private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
    jFrame_about.setVisible(true);
}//GEN-LAST:event_jMenuItem1ActionPerformed

private void jList_playlist2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList_playlist2MouseClicked
// TODO add your handling code here:
}//GEN-LAST:event_jList_playlist2MouseClicked

private void jMenuItem_pauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_pauseActionPerformed
    mpController.pauseTrack();
}//GEN-LAST:event_jMenuItem_pauseActionPerformed

private void jMenuItem_stopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_stopActionPerformed
    mpController.stopTrack();
    jProgressBar1.setValue(0);
    jProgressBar1.setString("");
    setTitle(Settings.getInstance().getWindowTitleText());
}//GEN-LAST:event_jMenuItem_stopActionPerformed

private void jMenuItem_clearplaylistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_clearplaylistActionPerformed
    plController.clearPlaylist();
    jList_playlist1.setListData(new String[0]);
    jLabel_playlistcount.setText(plController.getPlaylistStats());
}//GEN-LAST:event_jMenuItem_clearplaylistActionPerformed

private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
    jFrame_settings.setVisible(true);
}//GEN-LAST:event_jMenuItem2ActionPerformed

private void jMenuItem_addFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_addFilesActionPerformed
    jButton_addFilesActionPerformed(evt);
}//GEN-LAST:event_jMenuItem_addFilesActionPerformed

private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
    System.exit(0);
}//GEN-LAST:event_jMenuItem10ActionPerformed

private void jTextField_playlistNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_playlistNameFocusLost
    Settings.getInstance().setDefaultPlaylistName(jTextField_playlistName.getText());
}//GEN-LAST:event_jTextField_playlistNameFocusLost

private void jCheckBox_trayIconActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_trayIconActionPerformed
    Settings.getInstance().setTrayIcon(jCheckBox_trayIcon.isSelected());
}//GEN-LAST:event_jCheckBox_trayIconActionPerformed

private void jCheckBox_trayCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_trayCloseActionPerformed
    Settings.getInstance().setTrayClose(jCheckBox_trayClose.isSelected());
}//GEN-LAST:event_jCheckBox_trayCloseActionPerformed

private void jCheckBox_trayMinimizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_trayMinimizeActionPerformed
    Settings.getInstance().setTrayMinimize(jCheckBox_trayMinimize.isSelected());
}//GEN-LAST:event_jCheckBox_trayMinimizeActionPerformed

private void jCheckBox_lastfmScrobbleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_lastfmScrobbleActionPerformed
    Settings.getInstance().setLastfmScrobble(jCheckBox_lastfmScrobble.isSelected());
    jLabel_lastfmLastScrobble.setEnabled(jCheckBox_lastfmScrobble.isSelected());
}//GEN-LAST:event_jCheckBox_lastfmScrobbleActionPerformed

private void jTextField_lastfmUsernameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_lastfmUsernameFocusLost
    Settings.getInstance().setLasfmUsername(jTextField_lastfmUsername.getText());
}//GEN-LAST:event_jTextField_lastfmUsernameFocusLost

private void jPasswordField_lastfmPasswordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPasswordField_lastfmPasswordFocusLost
    Settings.getInstance().setLasfmPassword(new String(jPasswordField_lastfmPassword.getPassword()));
}//GEN-LAST:event_jPasswordField_lastfmPasswordFocusLost

private void jButton_checkAuthenticationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_checkAuthenticationActionPerformed
    try {
        if (Scrobbler.newScrobbler(Settings.getInstance().getClientID(), Settings.getInstance().getOpheliaVersion(), Settings.getInstance().getLasfmUsername()).handshake(Settings.getInstance().getLasfmPassword()).ok()) {
            JOptionPane.showMessageDialog(this, bundle.getString("AUTH_SUCCESS") /* NLS: Authentication success! */ );
        } else {
            JOptionPane.showMessageDialog(this, bundle.getString("AUTH_FAILED_CHECK_PSWD") /* NLS: Authentication failed! Check username or password! */ );
        }
    } catch (Exception ex) {
        //TODO
        }
}//GEN-LAST:event_jButton_checkAuthenticationActionPerformed

private void jMenuItem_savePlaylistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_savePlaylistActionPerformed
    jFileChooser_playlistfile.setDialogType(JFileChooser.SAVE_DIALOG);
    jDialog_playlistchoose.setVisible(true);
}//GEN-LAST:event_jMenuItem_savePlaylistActionPerformed

private void jMenuItem_openPlaylistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_openPlaylistActionPerformed
    jFileChooser_playlistfile.setDialogType(JFileChooser.OPEN_DIALOG);
    jDialog_playlistchoose.setVisible(true);
    jLabel_playlistcount.setText(plController.getPlaylistStats());
}//GEN-LAST:event_jMenuItem_openPlaylistActionPerformed

private void jFileChooser_playlistfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooser_playlistfileActionPerformed
    if (jFileChooser_playlistfile.getDialogType() == JFileChooser.OPEN_DIALOG) {
        plController.loadPlaylistFile(jFileChooser_playlistfile.getSelectedFile().getPath());
        new Thread(new GUIAnimation(1)).start();
    } else if (jFileChooser_playlistfile.getDialogType() == JFileChooser.SAVE_DIALOG) {
        plController.savePlaylistFile(jFileChooser_playlistfile.getSelectedFile().getPath());
    }
    jDialog_playlistchoose.setVisible(false);
}//GEN-LAST:event_jFileChooser_playlistfileActionPerformed

private void jTextField_windowTitleFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_windowTitleFocusLost
    Settings.getInstance().setWindowTitleText(jTextField_windowTitle.getText());
}//GEN-LAST:event_jTextField_windowTitleFocusLost

private void jCheckBox_trackInWindowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_trackInWindowActionPerformed
    Settings.getInstance().setTrackInWindowTitle(jCheckBox_trackInWindow.isSelected());
}//GEN-LAST:event_jCheckBox_trackInWindowActionPerformed

private void jTextField_searchCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField_searchCaretUpdate
    plController.searchTracks(jTextField_search.getText());
}//GEN-LAST:event_jTextField_searchCaretUpdate

private void jCheckBoxMenuItem_lastfmScrobbleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem_lastfmScrobbleActionPerformed
    Settings.getInstance().setLastfmScrobble(jCheckBoxMenuItem_lastfmScrobble.isSelected());
    jLabel_lastfmLastScrobble.setEnabled(jCheckBoxMenuItem_lastfmScrobble.isSelected());
    jCheckBox_lastfmScrobble.setEnabled(jCheckBoxMenuItem_lastfmScrobble.isSelected());
}//GEN-LAST:event_jCheckBoxMenuItem_lastfmScrobbleActionPerformed

private void jList_playlist1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList_playlist1KeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_SPACE) {
        mpController.pauseTrack();
    } else if (evt.getKeyCode() == KeyEvent.VK_CONTROL && evt.getKeyCode() == KeyEvent.VK_DELETE) {
        plController.clearPlaylist();
    } else if (evt.getKeyCode() == KeyEvent.VK_X) {
        TrackWithID3 selectedTrack = (TrackWithID3) jList_playlist1.getSelectedValue();
        mpController.playTrack(selectedTrack.getAbsoluteFile().getAbsolutePath());
    } else if (evt.getKeyCode() == KeyEvent.VK_Z) {
        mpController.stopTrack();
    } else if (evt.getKeyCode() == KeyEvent.VK_CONTROL && evt.getKeyCode() == KeyEvent.VK_P) {
        jFrame_settings.setVisible(true);
    }
}//GEN-LAST:event_jList_playlist1KeyPressed

private void jButton_addDirectoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_addDirectoryActionPerformed
    jFileChooser_musicfile.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
    jDialog_musicchoose.setVisible(true);
}//GEN-LAST:event_jButton_addDirectoryActionPerformed

private void jButton_playActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_playActionPerformed
    TrackWithID3 selectedTrack = (TrackWithID3) jList_playlist1.getSelectedValue();
    mpController.playTrack(selectedTrack.getAbsoluteFile().getAbsolutePath());
    //this thread will update the progressbar every 1 second
    if (progressbarAnimation != null) {
        progressbarAnimation.stop();
    }
    progressbarAnimation = new GUIAnimation(2);
    progressAnimationThread.submit(progressbarAnimation);
}//GEN-LAST:event_jButton_playActionPerformed

private void jMenuItem_addDirectoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_addDirectoryActionPerformed
    jButton_addDirectoryActionPerformed(evt);
}//GEN-LAST:event_jMenuItem_addDirectoryActionPerformed

private void jLabel_linkHomepageOpheliaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_linkHomepageOpheliaMouseClicked
    BrowserLaunch.openURL("http://wkjeldsen.dk/ophelia/");
}//GEN-LAST:event_jLabel_linkHomepageOpheliaMouseClicked

private void jMenuItem_checkVersionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_checkVersionActionPerformed
    if (mpController.isNewVersion()) {
        int confirm = JOptionPane.showConfirmDialog(this, java.util.ResourceBundle.getBundle("ophelia/gui/localization/MainResources").getString("NEW_VERSION"));
        if (confirm == 0) {
            BrowserLaunch.openURL("http://wkjeldsen.dk/ophelia");
        }
    } else {
        JOptionPane.showMessageDialog(this, bundle.getString("YOU_ARE_RUNNING_LATEST_VERSION") /* NLS: You are running the latest version */ );
    }
}//GEN-LAST:event_jMenuItem_checkVersionActionPerformed

private void jCheckBox_loadPlaylistStartupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_loadPlaylistStartupActionPerformed
    Settings.getInstance().setLoadPlaylistStartup(jCheckBox_loadPlaylistStartup.isSelected());
}//GEN-LAST:event_jCheckBox_loadPlaylistStartupActionPerformed

private void jMenuItem_openDefaultPlaylistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_openDefaultPlaylistActionPerformed
    plController.loadPlaylistFile(Settings.getInstance().getDefaultPlaylistName());
    new Thread(new GUIAnimation(1)).start();
}//GEN-LAST:event_jMenuItem_openDefaultPlaylistActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
    	java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton_addDirectory;
    private javax.swing.JButton jButton_addFiles;
    private javax.swing.JButton jButton_checkAuthentication;
    private javax.swing.JButton jButton_play;
    private javax.swing.JButton jButton_stop;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem2;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem_lastfmScrobble;
    private javax.swing.JCheckBox jCheckBox_lastfmScrobble;
    private javax.swing.JCheckBox jCheckBox_loadPlaylistStartup;
    private javax.swing.JCheckBox jCheckBox_trackInWindow;
    private javax.swing.JCheckBox jCheckBox_trayClose;
    private javax.swing.JCheckBox jCheckBox_trayIcon;
    private javax.swing.JCheckBox jCheckBox_trayMinimize;
    private javax.swing.JDialog jDialog_musicchoose;
    private javax.swing.JDialog jDialog_playlistchoose;
    private javax.swing.JFileChooser jFileChooser_musicfile;
    private javax.swing.JFileChooser jFileChooser_playlistfile;
    private javax.swing.JFrame jFrame_about;
    private javax.swing.JFrame jFrame_settings;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel_lastfmLastScrobble;
    private javax.swing.JLabel jLabel_linkHomepageOphelia;
    private javax.swing.JLabel jLabel_playlistcount;
    private javax.swing.JLabel jLabel_version;
    private javax.swing.JList jList_playlist1;
    private javax.swing.JList jList_playlist2;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem_addDirectory;
    private javax.swing.JMenuItem jMenuItem_addFiles;
    private javax.swing.JMenuItem jMenuItem_checkVersion;
    private javax.swing.JMenuItem jMenuItem_clearplaylist;
    private javax.swing.JMenuItem jMenuItem_openDefaultPlaylist;
    private javax.swing.JMenuItem jMenuItem_openPlaylist;
    private javax.swing.JMenuItem jMenuItem_pause;
    private javax.swing.JMenuItem jMenuItem_play;
    private javax.swing.JMenuItem jMenuItem_removetrack;
    private javax.swing.JMenuItem jMenuItem_savePlaylist;
    private javax.swing.JMenuItem jMenuItem_stop;
    private javax.swing.JMenu jMenu_addFiles;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPasswordField jPasswordField_lastfmPassword;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem2;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem3;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem4;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField_lastfmUsername;
    private javax.swing.JTextField jTextField_playlistName;
    private javax.swing.JTextField jTextField_search;
    private javax.swing.JTextField jTextField_windowTitle;
    private javax.swing.JToolBar jToolBar_statusbar;
    // End of variables declaration//GEN-END:variables

    /**
     * we use observer-pattern when updating our lists in gui, playlist etc. 
     */
    public void update(Observable o, Object arg) {
        if (o instanceof Playlist) { /* its playlist array data */
            jList_playlist1.setListData((Vector) arg);
        } else if (o instanceof ScrobbleStatus) {
            jLabel_lastfmLastScrobble.setText(ScrobbleStatus.getInstance().toString());
            jLabel_lastfmLastScrobble.setToolTipText(java.util.ResourceBundle.getBundle("ophelia/gui/localization/MainResources").getString("YOUR_LAST_SCROBBLE_TO_LAST.FM") + ScrobbleStatus.getInstance().getLastPlayed());
        }
    }

    /**
     * this baby is responsible for updating various gui elements when playing-
     * tracks or other processing-heavy jobs 
     */
    class GUIAnimation implements Runnable {

        private boolean stop = false;
        private int job;

        /**
         * 
         * @param job 1 for update of playlist stats
         * @param job 2 for update of music seekbar
         */
        public GUIAnimation(int job) {
            this.job = job;
        }

        public void stop() {
            this.stop = true;
        }

        /**
         * animating for the progressbar for displaying of track-progress
         * furthermore it also "shuffless" or do "continues play" on the-
         * playlist
         */
        public void playingAnimation() {
            TrackWithID3 selectedTrack = (TrackWithID3) jList_playlist1.getSelectedValue();
            TrackWithID3 nextTrack = null;
            if (jList_playlist1.getSelectedIndex() != jList_playlist1.getModel().getSize() - 1) {
                nextTrack = (TrackWithID3) jList_playlist1.getModel().getElementAt(jList_playlist1.getSelectedIndex() + 1);
            }
            jProgressBar1.setString(selectedTrack.getOSDStatus());
            try {
                if (Settings.getInstance().isTrackInWindowTitle()) {
                    setTitle(Settings.getInstance().getWindowTitleText() + selectedTrack.getTitle());
                } else {
                    setTitle(Settings.getInstance().getWindowTitleText());
                }
                while (!stop && !mpController.isComplete()) {
                    jProgressBar1.setValue((int) (((double) mpController.getTrackPosition() / 1000) / selectedTrack.getLength() * 100));
                    Thread.sleep(100);
                }
                /* continous play */
                if (!stop && nextTrack != null) {
                    mpController.playTrack(nextTrack.getAbsoluteFile().getAbsolutePath());
                    jList_playlist1.setSelectedValue(nextTrack, true);
                    if (progressbarAnimation != null) {
                        progressbarAnimation.stop();
                    }
                    progressbarAnimation = new GUIAnimation(2);
                    progressAnimationThread.submit(progressbarAnimation);
                }

            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }

        /**
         * animation displaying indexing-progress of tracks
         */
        public void indexingAnimation() {
            while (plController.isIndexing()) {
                jLabel_playlistcount.setText(bundle.getString("INDEXING") /* NLS: Indexing...  */  + plController.getTrackCount() + java.util.ResourceBundle.getBundle("ophelia/gui/localization/MainResources").getString("TRACKS_INDEXED"));
            }
            jLabel_playlistcount.setText(plController.getPlaylistStats());
        }

        public void run() {
            if (job == 2) {
                playingAnimation();
            } else if (job == 1) {
                indexingAnimation();
            }
        }
    }
}
